from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)
from my_game.items.item import GearItem


def main_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üßô –ü–µ—Ä—Å–æ–Ω–∞–∂–∏"), KeyboardButton(text="üè™ –ú–∞–≥–∞–∑–∏–Ω")],
            [KeyboardButton(text="üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"), KeyboardButton(text="üõå –û—Ç–¥—ã—Ö")],
            [KeyboardButton(text="‚öî –ë–æ–π")],
        ],
        resize_keyboard=True,
    )


def chars_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")],
            [KeyboardButton(text="üë• –û—Ç—Ä—è–¥")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True,
    )


def shop_keyboard(goods) -> InlineKeyboardMarkup:
    buttons = [
        [
            InlineKeyboardButton(
                text=f"{i+1}. {g.name} ‚Äî {g.price}g", callback_data=f"shop:{i}"
            )
        ]
        for i, g in enumerate(goods)
    ]
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="shop_exit")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def inventory_keyboard(items) -> InlineKeyboardMarkup:
    labels = []
    for i, it in enumerate(items):
        if isinstance(it, GearItem):
            labels.append(f"{i+1}. {it.name} ({it.slot.name})")
        else:
            desc = []
            if it.heal:
                desc.append(f"HP+{it.heal}")
            if it.mana:
                desc.append(f"MP+{it.mana}")
            labels.append(f"{i+1}. {it.name} ({', '.join(desc)})")
    buttons = [
        [InlineKeyboardButton(text=label, callback_data=f"inv:{i}")]
        for i, label in enumerate(labels)
    ]
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –í –º–µ–Ω—é", callback_data="inv_exit")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)
